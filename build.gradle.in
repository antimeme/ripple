// Gradle configuration for Ripple                  -*- mode: groovy -*-
plugins {
  id "java-library"
  id "war"
}
repositories { mavenCentral() }
sourceSets {
    application {
        java {
            srcDirs = ["@srcdir@/source", "source"]
            exclude "servlet"
        }
    }
    servlet { java { srcDirs = ["@srcdir@/source/servlet"] } }
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    applicationRuntime("com.googlecode.soundlibs:vorbisspi:1.0.3.3")

    //servletCompileOnly("jakarta.platform:jakarta.jakartaee-web-api:8.0.0")
    servletCompileOnly("javax.servlet:javax.servlet-api:4.0.1")
    servletRuntime("org.xerial:sqlite-jdbc:3.36.0.1")
    servletCompile(
        "com.fasterxml.jackson.core:jackson-core:2.13.0")
    servletCompile(
        "com.fasterxml.jackson.core:jackson-databind:2.13.0")
    servletCompile(
        "com.fasterxml.jackson.core:jackson-annotations:2.13.0")
}

task generateClassList {
    dependsOn compileApplicationJava
    doLast {
        def sourceSet = sourceSets.application
        def outputFile = file("$projectDir/build/.classes")

        outputFile.text = ""
        sourceSet.output.classesDirs.each { dir ->
            dir.eachFileRecurse { classFile ->
                if (classFile.isFile() &&
                    classFile.name.endsWith('.class') &&
                    !classFile.name.contains('$')) {
                    def className = classFile.absolutePath
                        .replaceAll("^$dir", '').replaceAll("^/", '')
                        .replaceAll('\\\\', '/')
                        .replaceAll('\\.class$', '')
                        .replaceAll('/', '.')
                    outputFile.append("$className\n")
                }
            }
        }
    }
}

jar {
    archiveName = "@PACKAGE@-@VERSION@.jar"
    dependsOn generateClassList
    from(sourceSets.application.output)
    from("@srcdir@/apps/images") { into "images" }
    from("@srcdir@/apps/fonts") { into "fonts" }
    from("@srcdir@/apps/sounds") { into "sounds" }
    from("$projectDir/build/.classes")
    manifest { from("@srcdir@/META-INF/MANIFEST.MF") }
}

war {
    archiveName = "@PACKAGE@-@VERSION@.war"
    dependsOn generateClassList
    classpath(configurations.servletCompile,
              configurations.servletRuntime)
    webXml = file "@srcdir@/WEB-INF/web.xml"
    into("WEB-INF") { from("@srcdir@/WEB-INF/jetty-env.xml") }
    into("WEB-INF/classes") { from sourceSets.servlet.output }
    from(sourceSets.application.output)
    from("@srcdir@/apps")
    from("$buildDir/classList.txt")
    manifest { attributes(
        "Application-Name": "Ripple",
        "Main-Class": "net.antimeme.ripple.Ripple",
        "Permissions": "sandbox",
        "Implementation-Title":   "Ripple Web Application",
        "Implementation-Version": "@VERSION@",
        "Implementation-Vendor":  "@PACKAGE@@antimeme.net" ) }
}
